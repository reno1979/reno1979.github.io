"use strict";(self.webpackChunkaip=self.webpackChunkaip||[]).push([[21],{"./libs/report-components/src/styles/colors.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{O:function(){return colors}});var colors={primairyBlack:"--report-color-primary-black",primairyWhite:"--report-color-primary-white",primairyBlue:"--report-color-primary-blue",primairyRed:"--report-color-primary-red",darkBlue:"--report-color-dark-blue",orange:"--report-color-orange",yellow:"--report-color-yellow",green:"--report-color-green",darkGreen:"--report-color-dark-green",blue:"--report-color-blue",purple:"--report-color-purple",magenta:"--report-color-magenta",neutralGrey1:"--report-color-neutral-grey-1",neutralGrey2:"--report-color-neutral-grey-2",neutralGrey3:"--report-color-neutral-grey-3",neutralGrey4:"--report-color-neutral-grey-4",darkYellow:"--report-color-dark-yellow"}},"./libs/report-components/src/styles/fonts.ts":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{R:function(){return fonts}});var fonts={base:"--report-base-font",baseBold:"--report-base-bold-font",baseBolder:"--report-base-bolder-font",small:"--report-small-font",smallBold:"--report-small-bold-font",h1:"--report-h1-font",h2:"--report-h2-font",h3:"--report-h3-font",h4:"--report-h4-font",h5:"--report-h5-font",h6:"--report-h6-font"}},"./libs/report-components/src/styles/colors.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColorGrid:function(){return ColorGrid},__namedExportsOrder:function(){return __namedExportsOrder}});var _ColorGrid$parameters,_ColorGrid$parameters2,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),_colors__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./libs/report-components/src/styles/colors.ts"),_fonts__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./libs/report-components/src/styles/fonts.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){(0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__.Z)(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}__webpack_exports__.default={title:"Colors"};var ColorGrid=function ColorGrid(){var colorsKeys=Object.keys(_colors__WEBPACK_IMPORTED_MODULE_1__.O),colorKeysOnWhichDarkerFontIsNeeded=["green","neutralGrey1","neutralGrey2","primairyWhite","yellow","darkYellow"];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("div",{style:{display:"grid",gridTemplateColumns:"repeat(auto-fill, minmax(130px, 1fr))",gap:"1em"},children:colorsKeys.map((function(colorKey){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{style:{backgroundColor:"var(".concat(_colors__WEBPACK_IMPORTED_MODULE_1__.O[colorKey],")"),border:"".concat("primairyWhite"===colorKey?"1px solid #000":"none"),color:"".concat(colorKeysOnWhichDarkerFontIsNeeded.includes(colorKey)?"#000":"#fff"),padding:"1em",borderRadius:"4px",display:"flex",flexDirection:"column",font:"var(".concat(_fonts__WEBPACK_IMPORTED_MODULE_2__.R.baseBold,")")},children:[colorKey,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)("span",{style:{font:"var(".concat(_fonts__WEBPACK_IMPORTED_MODULE_2__.R.small,")"),whiteSpace:"nowrap"},children:_colors__WEBPACK_IMPORTED_MODULE_1__.O[colorKey]})]},colorKey)}))})};ColorGrid.displayName="ColorGrid",ColorGrid.parameters=_objectSpread(_objectSpread({},ColorGrid.parameters),{},{docs:_objectSpread(_objectSpread({},null===(_ColorGrid$parameters=ColorGrid.parameters)||void 0===_ColorGrid$parameters?void 0:_ColorGrid$parameters.docs),{},{source:_objectSpread({originalSource:"() => {\n  const colorsKeys = (Object.keys(colors) as ColorKey[]);\n  const colorKeysOnWhichDarkerFontIsNeeded: ColorKey[] = ['green', 'neutralGrey1', 'neutralGrey2', 'primairyWhite', 'yellow', 'darkYellow'];\n  return <div style={{\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(130px, 1fr))',\n    gap: '1em'\n  }}>\n            {colorsKeys.map(colorKey => <div key={colorKey} style={{\n      backgroundColor: `var(${colors[colorKey]})`,\n      border: `${colorKey === 'primairyWhite' ? '1px solid #000' : 'none'}`,\n      color: `${colorKeysOnWhichDarkerFontIsNeeded.includes(colorKey) ? '#000' : '#fff'}`,\n      padding: '1em',\n      borderRadius: '4px',\n      display: 'flex',\n      flexDirection: 'column',\n      font: `var(${fonts.baseBold})`\n    }}>\n                    {colorKey}\n                    <span style={{\n        font: `var(${fonts.small})`,\n        whiteSpace: 'nowrap'\n      }}>{colors[colorKey]}</span>\n                </div>)}\n        </div>;\n}"},null===(_ColorGrid$parameters2=ColorGrid.parameters)||void 0===_ColorGrid$parameters2||null===(_ColorGrid$parameters2=_ColorGrid$parameters2.docs)||void 0===_ColorGrid$parameters2?void 0:_ColorGrid$parameters2.source)})});var __namedExportsOrder=["ColorGrid"]}}]);